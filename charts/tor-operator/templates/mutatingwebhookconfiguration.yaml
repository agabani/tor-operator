{{- $secretData := default (dict) (lookup "v1" "Secret" .Release.Namespace (include "tor-operator.tlsSecretName" .)).data -}}
{{- $caCrt  := index $secretData "ca.crt"  -}}
{{- $tlsCrt := index $secretData "tls.crt" -}}
{{- $tlsKey := index $secretData "tls.key" -}}

{{- if and .Values.tlsSecret.create (or .Release.IsInstall .Values.tlsSecret.recreate) -}}
{{- $ca := genCA "tor-operator-ca" 3650 }}
{{- $cert := genSignedCert "tor-operator" (list) (list (printf "%s" (include "tor-operator.fullname" .)) (printf "%s.%s" (include "tor-operator.fullname" .) .Release.Namespace) (printf "%s.%s.svc" (include "tor-operator.fullname" .) .Release.Namespace)) 3650 $ca }}
{{- $caCrt  = $ca.Cert  | toString | b64enc }}
{{- $tlsCrt = $cert.Cert | toString | b64enc }}
{{- $tlsKey = $cert.Key | toString | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tor-operator.tlsSecretName" . }}
  annotations:
    {{- with .Values.tlsSecret.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.tlsSecret.recreate }}
    helm.sh/hook: pre-upgrade
    {{- else if .Values.tlsSecret.create }}
    helm.sh/hook: pre-install
    {{- end }}
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    {{- include "tor-operator.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  ca.crt:  {{ $caCrt  }}
  tls.crt: {{ $tlsCrt }}
  tls.key: {{ $tlsKey }}
{{- end }}

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "tor-operator.fullname" . }}-a
  labels:
    {{- include "tor-operator.labels" . | nindent 4 }}
webhooks:
  - name: {{ include "tor-operator.fullname" . }}.{{ .Release.Namespace }}.svc
    admissionReviewVersions: ["v1"]
    clientConfig:
      caBundle: {{ $caCrt }}
      service:
       name: {{ include "tor-operator.fullname" . }}
       namespace: {{ .Release.Namespace }}
       path: "/mutate"
       port: {{ .Values.service.https.port }}
    failurePolicy: Fail
    objectSelector:
      matchLabels:
        proxy.tor.agabani.co.uk/inject: "true"
    rules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["pods"]
        scope: "Namespaced"
    sideEffects: None
    timeoutSeconds: 5
